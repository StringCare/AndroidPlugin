import org.gradle.internal.jvm.Jvm

def siteUrl = 'https://github.com/StringCare/AndroidPlugin'
def gitUrl = 'https://github.com/StringCare/AndroidPlugin.git'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1"
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.5.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'nexus'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'

group 'com.stringcare'
version '0.9'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Use the latest Groovy version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile "org.apache.commons:commons-io:1.3.2"
    compile gradleApi()

    // Use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

task generateJniHeaders(type: Exec, dependsOn: 'classes') {
    def classpath = sourceSets.main.output.classesDirs.join(":")
    def appclasspath = configurations.runtime.files*.absolutePath.join(":")
    def nativeIncludes = "src/main/native"
    def jniClasses = [
            'CredentialUtils'
    ]
    def javah = Jvm.current().getExecutable('javah')
    commandLine(javah, "-d", nativeIncludes, "-force", "-classpath", "$classpath:$appclasspath", *jniClasses)
}

task initCmake(type: Exec) {
    inputs.files "CMakeList.txt", fileTree('src/main/native').include("*")
    outputs.files "CMakeCache.txt", "cmake_install.cmake", "CTestTestfile.cmake", "CMakeFiles", "Makefile"
    //commandLine "cmake", "."
    commandLine "cmake", "-DCMAKE_C_COMPILER=/usr/bin/gcc", "-DCMAKE_CXX_COMPILER=/usr/bin/g++", "."
}

task buildNative(type: Exec, dependsOn: [initCmake, generateJniHeaders]) {
    commandLine "make", "-j"
}

test {
    dependsOn buildNative, "cleanTest"
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'StringCareAndroidPlugin'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'efraespada'
                        name 'efraespada'
                        email 'efraespada@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintrayUser")
    key = properties.getProperty("bintrayApiKey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "StringCareAndroidPlugin"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

cleanTest.doFirst {
    delete "${rootDir}/CMakeFile"
    // delete "${rootDir}/CMakeFiles/"
    delete "${rootDir}/CMakeCache.txt"
}

